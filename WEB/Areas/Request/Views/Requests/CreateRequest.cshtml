@model CreateRequestVM
@{
    ViewData["Title"] = "Create Request";
}

<!-- Fonts and icons -->
<link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Inter:300,400,500,600,700,900" />
<link href="~/TemplateResources/css/nucleo-icons.css" rel="stylesheet" />
<link href="~/TemplateResources/css/nucleo-svg.css" rel="stylesheet" />
<script src="https://kit.fontawesome.com/42d5adcbca.js" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,400,0,0" />
<link id="pagestyle" href="~/TemplateResources/css/material-dashboard.css?v=3.2.0" rel="stylesheet" />


<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="bg-gradient-dark shadow-dark border-radius-lg pt-4 pb-3">
            <h6 class="text-white text-capitalize ps-3">Satın Alma Talebi Oluştur</h6>
        </div>
        <div class="card-body">
            <form asp-action="CreateRequest" asp-controller="Requests" asp-area="Request" enctype="multipart/form-data" method="post">
                <div class="row g-4">
                    <!-- Talep Bilgileri -->
                    <div class="col-md-4">
                        <label asp-for="RequestDate" class="form-label fw-bold"></label>
                        <input asp-for="RequestDate" class="form-control border border-dark shadow-sm" type="date" />
                        <span asp-validation-for="RequestDate" class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label fw-bold">Talep Eden Personel</label>
                        <input class="form-control border border-dark shadow-sm" value="@Model.FullName" readonly />
                    </div>
                    <div class="col-md-4">
                        <label asp-for="DepartmentName" class="form-label fw-bold"></label>
                        <input asp-for="DepartmentName" class="form-control border border-dark shadow-sm" readonly />
                    </div>
                </div>

                <br />

                <div class="row g-4">
                    <!-- Kategori -->
                    <div class="col-md-4">
                        <label asp-for="CategoryId" class="form-label"></label>
                        <select asp-for="CategoryId"
                                asp-items="Model.CategoryList ?? new SelectList(Enumerable.Empty<SelectListItem>())"
                                class="form-select border border-dark shadow-sm"
                                id="categorySelect"
                                onchange="loadSubCategoriesByCategoryId(this.value)">
                            <option value="">Bir kategori seçiniz!</option>
                        </select>
                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                    </div>

                    <!-- Alt Kategori -->
                    <div class="col-md-4">
                        <label asp-for="SubCategoryId" class="form-label"></label>
                        <select asp-for="SubCategoryId"
                                asp-items="Model.SubCategoryList ?? new SelectList(Enumerable.Empty<SelectListItem>())"
                                class="form-select border border-dark shadow-sm"
                                id="subCategorySelect"
                                disabled
                                onchange="loadProductsBySubCategoryId(this.value)">
                            <option value="">Bir alt kategori seçiniz!</option>
                        </select>
                        <span asp-validation-for="SubCategoryId" class="text-danger"></span>
                    </div>

                    <!-- Ürün -->
                    <div class="col-md-4">
                        <label asp-for="ProductId" class="form-label"></label>
                        <select asp-for="ProductId"
                                asp-items="Model.ProductList ?? new SelectList(Enumerable.Empty<SelectListItem>())"
                                class="form-select border border-dark shadow-sm"
                                id="productSelect"
                                disabled>
                            <option value="">Bir ürün seçiniz!</option>
                        </select>
                        <span asp-validation-for="ProductId" class="text-danger"></span>
                    </div>
                </div>

                <br />

                <div class="row g-4">
                    <!-- Özel Ürün -->
                    <div class="col-md-12">
                        <label asp-for="SpecialProductName" class="form-label fw-bold"></label>
                        <input asp-for="SpecialProductName" class="form-control border border-dark shadow-sm" placeholder="Listede yoksa buraya yazın" />
                    </div>

                    <!-- Miktar -->
                    <div class="col-md-12">
                        <label asp-for="Amount" class="form-label fw-bold"></label>
                        <input asp-for="Amount" type="number" class="form-control border border-dark shadow-sm" min="1" />
                        <span asp-validation-for="Amount" class="text-danger"></span>
                    </div>

                    <!-- Açıklama -->
                    <div class="col-md-12">
                        <label asp-for="Description" class="form-label fw-bold"></label>
                        <textarea asp-for="Description" class="form-control border border-dark shadow-sm" rows="4"></textarea>
                    </div>

                    <!-- Şartname -->
                    <div class="col-md-12">
                        <label asp-for="ProductFeaturesFile" class="form-label fw-bold"></label>
                        <input asp-for="ProductFeaturesFile" type="file" class="form-control border border-dark shadow-sm" accept="application/pdf" />
                    </div>
                </div>

                <br />
                <div class="col-md-12 text-end">
                    <button type="submit" class="btn btn-dark px-4">Talebi Gönder</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Temel Scriptler -->
<script src="~/TemplateResources/js/core/popper.min.js"></script>
<script src="~/TemplateResources/js/core/bootstrap.min.js"></script>
<script src="~/TemplateResources/js/plugins/perfect-scrollbar.min.js"></script>
<script src="~/TemplateResources/js/plugins/smooth-scrollbar.min.js"></script>

<script>
    const subSelect = document.getElementById('subCategorySelect');
    const prodSelect = document.getElementById('productSelect');

    function resetSelect(selectEl, placeholder) {
        // tüm seçenekleri temizle
        while (selectEl.options.length > 0) selectEl.remove(0);
        // placeholder ekle
        const opt = document.createElement('option');
        opt.value = "";
        opt.textContent = placeholder;
        selectEl.appendChild(opt);
        // seçim sıfırla
        selectEl.value = "";
    }

    async function loadSubCategoriesByCategoryId(categoryId) {
        // kategori boşsa alt/ürün selectlerini temizle ve kilitle
        if (!categoryId) {
            resetSelect(subSelect, "Bir alt kategori seçiniz!");
            subSelect.disabled = true;

            resetSelect(prodSelect, "Bir ürün seçiniz!");
            prodSelect.disabled = true;
            return;
        }

        try {
            resetSelect(subSelect, "Yükleniyor...");
            subSelect.disabled = true;

            resetSelect(prodSelect, "Bir ürün seçiniz!");
            prodSelect.disabled = true;

            const resp = await fetch(`/Request/Requests/GetSubCategories?categoryId=${encodeURIComponent(categoryId)}`);
            if (!resp.ok) throw new Error('Alt kategoriler yüklenemedi');

            const data = await resp.json(); // [{id,name},...]

            resetSelect(subSelect, "Bir alt kategori seçiniz!");
            data.forEach(sc => {
                const o = document.createElement('option');
                o.value = sc.id;
                o.textContent = sc.name;
                subSelect.appendChild(o);
            });

            subSelect.disabled = data.length === 0; // yoksa kilitli kalsın
        } catch (e) {
            console.error(e);
            resetSelect(subSelect, "Alt kategori yüklenemedi");
            subSelect.disabled = true;
        }
    }

    async function loadProductsBySubCategoryId(subCategoryId) {
        if (!subCategoryId) {
            resetSelect(prodSelect, "Bir ürün seçiniz!");
            prodSelect.disabled = true;
            return;
        }

        try {
            resetSelect(prodSelect, "Yükleniyor...");
            prodSelect.disabled = true;

            const resp = await fetch(`/Request/Requests/GetProducts?subCategoryId=${encodeURIComponent(subCategoryId)}`);
            if (!resp.ok) throw new Error('Ürünler yüklenemedi');

            const data = await resp.json();

            resetSelect(prodSelect, "Bir ürün seçiniz!");
            data.forEach(p => {
                const o = document.createElement('option');
                o.value = p.id;
                o.textContent = p.name;
                prodSelect.appendChild(o);
            });

            prodSelect.disabled = data.length === 0;
        } catch (e) {
            console.error(e);
            resetSelect(prodSelect, "Ürün yüklenemedi");
            prodSelect.disabled = true;
        }
    }
</script>


@{
    var actionName = ViewContext.RouteData.Values["action"]?.ToString();
}
@if (actionName == "Dashboard" || actionName == "Home")
{
    <script src="~/TemplateResources/js/material-dashboard.min.js?v=3.2.0"></script>
}

<script async defer src="https://buttons.github.io/buttons.js"></script>
